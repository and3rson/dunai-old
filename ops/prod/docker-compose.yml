version: '2.1'
services:
    app:
        image: dunai
        environment:
            PYTHONUNBUFFERED: 0
            DJANGO_SETTINGS_MODULE: 'dunai.settings.prod'
        command: >
            /bin/bash -c "
                while ! nc -z postgres 5432
                do
                    echo Waiting for PostgreSQL
                    sleep 1
                done
                ./manage.py collectstatic --no-input
                ./manage.py migrate
                ./manage.py runserver 0.0.0.0:8000
            "
        links:
            - postgres
            - wkhtmltopdf
        volumes:
            - ../../static:/root/dunai/static
            - ../../media:/root/dunai/media
        ports:
            - 8000:8000
        networks:
            main:
                aliases:
                    - app
    worker:
        image: dunai
        environment:
            PYTHONUNBUFFERED: 0
            DJANGO_SETTINGS_MODULE: 'dunai.settings.prod'
        command: >
            /bin/bash -c "
                while ! nc -z postgres 5432
                do
                    echo Waiting for PostgreSQL
                    sleep 1
                done
                ./manage.py worker
            "
        links:
            - postgres
        volumes:
            - ../../static:/root/dunai/static
            - ../../media:/root/dunai/media
        networks:
            main:
                aliases:
                    - worker
    postgres:
        image: postgres:9.6
        environment:
            POSTGRES_DB: dunai
            POSTGRES_USER: dunai
            POSTGRES_PASSWORD: dunai
        ports:
            - 5432:5432
        networks:
            main:
                aliases:
                    - postgres
    wkhtmltopdf:
        image: openlabs/docker-wkhtmltopdf-aas
        networks:
            main:
                aliases:
                    - wkhtmltopdf
    #nginx:
    #    image: nginx
    #    ports:
    #        - 80:80
    #    volumes:
    #        - ./nginx.conf:/etc/nginx/nginx.conf:ro
    #    volumes_from:
    #        - app:ro
    #    networks:
    #        main:
    #            aliases:
    #                - nginx
networks:
    main:

